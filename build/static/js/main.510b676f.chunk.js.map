{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","pokemonName","setpokemonName","pokemonChosen","setpokemonChosen","name","species","img","hp","attack","defense","type","pokemon","setpokemon","className","onChange","event","target","value","onClick","Axios","get","then","response","a","data","sprites","front_default","stats","base_stat","types","src","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gQA+DeA,MA3Df,WACE,MAAsCC,mBAAS,IAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAA0CF,oBAAS,GAAnD,mBAAOG,EAAP,KAAsBC,EAAtB,KAEA,EAA8BJ,mBAAS,CACrCK,KAAK,GACLC,QAAQ,GACRC,IAAI,GACJC,GAAI,GACJC,OAAO,GACPC,QAAQ,GACRC,KAAK,KAPP,mBAAOC,EAAP,KAAgBC,EAAhB,KAyBA,OACE,sBAAKC,UAAU,MAAf,UACE,sBAAKA,UAAU,eAAf,UACE,+CACA,uBACEH,KAAK,OACLI,SAAU,SAACC,GACTd,EAAec,EAAMC,OAAOC,UAGhC,wBAAQC,QA1BQ,WACpBC,IAAMC,IAAN,4CAA+CpB,IAAeqB,KAA9D,uCACE,WAAOC,GAAP,SAAAC,EAAA,sDACEX,EAAW,CACTR,KAAMJ,EACNK,QAASiB,EAASE,KAAKnB,QAAQD,KAC/BE,IAAKgB,EAASE,KAAKC,QAAQC,cAC3BnB,GAAIe,EAASE,KAAKG,MAAM,GAAGC,UAC3BpB,OAAOc,EAASE,KAAKG,MAAM,GAAGC,UAC9BnB,QAAQa,EAASE,KAAKG,MAAM,GAAGC,UAC/BlB,KAAKY,EAASE,KAAKK,MAAM,GAAGnB,KAAKN,OAEnCD,GAAiB,GAVnB,2CADF,wDAyBI,+BAEF,qBAAKU,UAAU,iBAAf,SAAkCX,EAGlC,qCACA,6BAAKS,EAAQP,OACb,qBAAK0B,IAAKnB,EAAQL,MAClB,0CAAaK,EAAQN,WACrB,qCAAQM,EAAQJ,MAChB,0CAAaI,EAAQJ,MACrB,2CAAcI,EAAQJ,SARtB,wEClCSwB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.510b676f.chunk.js","sourcesContent":["import \"./App.css\";\nimport { useState } from \"react\";\nimport Axios from \"axios\";\n\nfunction App() {\n  const [pokemonName, setpokemonName] = useState(\"\");\n  const [pokemonChosen, setpokemonChosen] = useState(false);\n\n  const [pokemon, setpokemon] = useState({\n    name:\"\",\n    species:\"\",\n    img:\"\",\n    hp: \"\",\n    attack:\"\",\n    defense:\"\",\n    type:\"\"\n  });\n  const searchPokemon = () => {\n    Axios.get(`https://pokeapi.co/api/v2/pokemon/${pokemonName}`).then(\n      async (response) => {\n        setpokemon({\n          name: pokemonName,\n          species: response.data.species.name,\n          img: response.data.sprites.front_default,\n          hp: response.data.stats[0].base_stat,\n          attack:response.data.stats[1].base_stat,\n          defense:response.data.stats[2].base_stat,\n          type:response.data.types[0].type.name\n        });\n        setpokemonChosen(true);\n      }\n    );\n  };\n  return (\n    <div className=\"App\">\n      <div className=\"titlesection\">\n        <h1>Pokemon Stats</h1>\n        <input\n          type=\"text\"\n          onChange={(event) => {\n            setpokemonName(event.target.value);\n          }}\n        />\n        <button onClick={searchPokemon}>Search pokemon</button>\n      </div>\n      <div className=\"Displaysection\">{!pokemonChosen?(\n      <h1>choose a pokemon you want to see</h1>):\n      (\n      <>\n      <h1>{pokemon.name}</h1>\n      <img src={pokemon.img}/>\n      <h3>species:{pokemon.species}</h3>\n      <h4>hp:{pokemon.hp}</h4>\n      <h4> attack:{pokemon.hp}</h4>\n      <h4> defense:{pokemon.hp}</h4>\n      </>\n      )}\n\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}